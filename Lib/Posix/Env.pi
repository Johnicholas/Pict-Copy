# line 1 "/home/pierce/pict/Lib/Posix/Env.src"






  import "Std/Exn"
  import "Std/Misc"
  import "Std/List"
  import "Std/String"

  val env : [

  get = /[String Exn /String]





  toList = /[/(List String)]






    
] = (

(ccode 0 I "extern char **environ;");

inline
def get (n:String fail:Exn) : String =
  (val s:CString = (ccode 0 P "(Val)getenv(S(#))" n)
   if (prim.nullPtr s) then (exn.raise fail (+$ > "env.get(" n ")"))
   else (prim.fromCString s))

def toList () : (List String) =
  (def loop (x:Int) : (List String) =
     (val e:CString = (ccode 0 P "(Val)environ[I(#)]" x)
      if (prim.nullPtr e) then nil
      else (cons (prim.fromCString e) (loop (inc x))))
   (loop 0))

[get=get toList=toList]
)
