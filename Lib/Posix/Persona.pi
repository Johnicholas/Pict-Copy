# line 1 "/home/pierce/pict/Lib/Posix/Persona.src"












  import "Std/Int"
  import "Std/List"
  import "Std/String"

  val [



  #UID<Int
  #GID<Int




  #PasswordInfo =
    [userName = String
     realName = String
     password = String
     user     = UID
     group    = GID
     homeDir  = String
     shell    = String]





  persona:[



  uid = /[/UID]




  euid = /[/UID]






  gid = /[/GID]




  egid = /[/GID]




  groups = /[/(List GID)]






  uidInfo = /[UID Exn /PasswordInfo]






  userInfo = /[String Exn /PasswordInfo]






    
]] = (

(ccode 0 I "##include <pwd.h>");
(ccode 0 I "##include <grp.h>");

val [#UID<Int] = [#Int]

inline def uid () : UID = (ccode 0 R "intInt(getuid())")
inline def euid () : UID = (ccode 0 R "intInt(geteuid())")

val [#GID<Int] = [#Int]

inline def gid () : GID = (ccode 0 R "intInt(getgid())")
inline def egid () : GID = (ccode 0 R "intInt(getegid())")

def groups () : (List GID) =
  (val n:Int = (ccode 0 R "intInt(getgroups(0,NULL))")
   val b = (prim.alloc (* n (ccode 0 C "intInt(sizeof(gid_t))")))
   if (ccode 0 W "(getgroups(I(#),(gid_t *)S(#)) < 0)" n b) then
     (error.fatal "getGroups")
   else
     (list.tabulate n
      \(x:Int):GID = (ccode 0 R "intInt(((gid_t *)S(#))[I(#)])" b x)))

val [#PASSWD] = [#Top]

type PasswordInfo =
  [userName = String
   realName = String
   password = String
   user     = UID
   group    = GID
   homeDir  = String
   shell    = String]

inline def copyPwd (pwd:PASSWD) : PasswordInfo =
  [userName =
     (prim.fromCString (ccode 0 R "(Val)((struct passwd *)#)->pw_name" pwd))
   realName =
     (prim.fromCString (ccode 0 R "(Val)((struct passwd *)#)->pw_gecos" pwd))
   password =
     (prim.fromCString (ccode 0 R "(Val)((struct passwd *)#)->pw_passwd" pwd))
   user =
     (ccode 0 R "intInt(((struct passwd *)#)->pw_uid)" pwd)
   group =
     (ccode 0 R "intInt(((struct passwd *)#)->pw_gid)" pwd)
   homeDir =
     (prim.fromCString (ccode 0 R "(Val)((struct passwd *)#)->pw_dir" pwd))
   shell =
     (prim.fromCString (ccode 0 R "(Val)((struct passwd *)#)->pw_shell" pwd))]

inline def uidInfo (uid:UID fail:Exn):PasswordInfo =
  (val pwd:PASSWD = (ccode 0 R "(Val)getpwuid(I(#))" uid)
   if (prim.nullPtr pwd) then (exn.raise fail "uidPasswordInfo")
   else (copyPwd pwd))

inline def userInfo (user:String fail:Exn):PasswordInfo =
  (val pwd:PASSWD = (ccode 0 R "(Val)getpwnam(S(#))" user)
   if (prim.nullPtr pwd) then (exn.raise fail "uidPasswordInfo")
   else (copyPwd pwd))

[[uid=uid euid=euid gid=gid egid=egid groups=groups uidInfo=uidInfo
  userInfo=userInfo]]

)
